/*! Knockout App - v0.2.0 - 2012-12-26
* https://github.com/paglias/KnockoutApp
* Copyright (c) 2012 Matteo Pagliazzi; Licensed MIT */

(function(){var t=this,e=t.ko;if(e===void 0)throw"knockoutJS must be loaded to use KnockoutApp";var i=t.KnockoutApp={};i.VERSION="0.2.0";var r=i.Utils={isObservableArray:function(t){return e.isObservable(t)&&void 0!==t.destroyAll},extendObjKnockout:function(t,i){for(var n in i){var o=i[n];"object"==typeof o&&null!==o&&t[n]&&!e.isWriteableObservable(t[n])?r.extendObjKnockout(t[n],o):r.isObservableArray(t[n])?o instanceof Array?t[n](o):t[n].push(o):e.isWriteableObservable(t[n])?t[n](o):t[n]=o}return t},extendClass:function(t,i){var r,n=this,o=function(){};return r=t&&t.hasOwnProperty("constructor")?t.constructor:function(){n.apply(this,arguments)},e.utils.extend(r,n),o.prototype=n.prototype,r.prototype=new o,t&&e.utils.extend(r.prototype,t),i&&e.utils.extend(r,i),r.prototype.constructor=r,r.__super__=n.prototype,r.extend=n.extend,r},unwrapValue:function(t,e){if(null===t)return null;var i=t[e];return"function"==typeof i?i.call(t):i},wrapError:function(){var t=Array.prototype.slice.call(arguments);console.log("Error ",t)}},n=i.Model=function(t,i){this.id=e.observable(!1),this.attributes={},t&&(t[this.idAttribute]&&(this.id(t[this.idAttribute]),delete t[this.idAttribute]),this.attributes=r.extendObjKnockout(this.defaultAttributes(),t)),i&&i.collection&&(this.collection=i.collection),this.isNew=e.computed(function(){return this.id()===!1?!0:!1},this),this.initialize&&this.initialize.apply(this,arguments)};e.utils.extend(n.prototype,{defaultAttributes:function(){return{}},idAttribute:"id",sync:function(){return(this.collection&&this.collection.sync||i.Sync).apply(this,arguments)},url:function(){var t=r.unwrapValue(this,"baseUrl")||this.collection&&r.unwrapValue(this.collection,"url");return this.isNew()?t:t+("/"===t[t.length-1]?"":"/")+this.id()},validate:function(){return!0},fetch:function(t){var i=this,n={};return n.success=function(t){delete t[i.idAttribute],i.attributes=r.extendObjKnockout(i.defaultAttributes(),t)},n.error=function(){r.wrapError(arguments)},t&&e.utils.extend(n,t),this.sync.call(this,"fetch",this,n)},save:function(t){if(this.validate()!==!0)return!1;var i=this,n={},o=this.isNew()?"create":"update";return n.success=function(t){"create"===o&&i.id(t[i.idAttribute])},n.error=function(){r.wrapError(arguments)},t&&e.utils.extend(n,t),this.sync.call(this,o,this,n)},destroy:function(t){if(this.isNew())return this.collection&&this.collection.models.remove(this),!1;if(!this.isNew()){var i={},n=this;return i.success=function(){n.collection&&n.collection.models.remove(n)},i.error=function(){r.wrapError(arguments)},t&&e.utils.extend(i,t),this.sync.call(this,"destroy",this,i)}},toJSON:function(){var t=e.toJS(this.attributes);return this.id()&&(t[this.idAttribute]=this.id()),t}});var o=i.Collection=function(t){if(!t)throw"A model must be provided for a collection";this.model=t,this.models=e.observableArray(),this.initialize&&this.initialize.apply(this,arguments)};e.utils.extend(o.prototype,{sync:function(){return i.Sync.apply(this,arguments)},fetch:function(t){var i=this,n={};return n.success=function(t){var e=[];for(var r in t)e.push(t[r]);e.length>0&&i.add(e)},n.error=function(){r.wrapError(arguments)},n&&e.utils.extend(n,t),this.sync.call(this,"fetch",this,n)},add:function(t,i){var r=t instanceof Array?t:[t],o=this;e.utils.arrayForEach(r,function(t){var e;t instanceof n?(e=t,e.collection=o):e=new o.model(t,{collection:o}),o.models.push(e),i&&e.save()})},remove:function(t){var i=t instanceof Array?t:[t];e.utils.arrayForEach(i,function(t){t.destroy()})},toJSON:function(){var t=[];return e.utils.arrayForEach(this.models(),function(e){t.push(e.toJSON())}),t}}),i.Sync=function(i,n,o){if(t.$===void 0)throw"jQuery is necessary to make Ajax calls";var s={},a=o||{};switch(s.dataType="json",s.url=r.unwrapValue(n,"url"),i){case"fetch":s.type="GET";break;case"create":s.type="POST",n.modelName?(s.data={},s.data[n.modelName]=n.toJSON()):s.data=n.toJSON();break;case"update":s.type="PUT",n.modelName?(s.data={},s.data[n.modelName]=n.toJSON()):s.data=n.toJSON();break;case"destroy":s.type="DELETE"}return t.$.ajax(e.utils.extend(s,a))},o.extend=n.extend=r.extendClass}).call(this);